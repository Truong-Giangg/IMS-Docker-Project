#!KAMAILIO
# -------------------------------
# S-CSCF (simple reg + location)
# - SIP UDP/TCP 6060
# - Diameter XML via /etc/kamailio/diameter.xml
# - Generic (non-IMS) registrar/usrloc so it boots everywhere
# -------------------------------

debug=2
children=4
log_stderror=no

listen=udp:0.0.0.0:6060
listen=tcp:0.0.0.0:6060
alias=scscf.local

loadmodule "sl.so"
loadmodule "tm.so"
loadmodule "rr.so"
loadmodule "xlog.so"
loadmodule "pv.so"
loadmodule "textops.so"
loadmodule "siputils.so"

# registrar/usrloc (generic)
loadmodule "usrloc.so"
loadmodule "registrar.so"
modparam("registrar", "method_filtering", 1)
modparam("registrar", "max_expires", 3600)
modparam("registrar", "use_path", 1)
modparam("registrar", "gruu_enabled", 0)

# Diameter (XML flavor)
loadmodule "cdp.so"
loadmodule "cdp_avp.so"
modparam("cdp", "config_file", "/etc/kamailio/diameter.xml")

request_route {
    force_rport();
    remove_hf("Route");

    # in-dialog => relay
    if ( $(hdr(To){param.value,tag}) != $null ) {
        route(RELAY);
        exit;
    }

    # REGISTER
    if (is_method("REGISTER")) {
        if (!save("location")) {
            sl_send_reply("500", "Register Failed");
            exit;
        }
        sl_send_reply("200", "OK");
        exit;
    }

    # Initial INVITE/SUBSCRIBE/etc.
    # Record-Route dialog-forming requests
    if (is_method("INVITE|SUBSCRIBE")) record_route();

    # Resolve target in usrloc
    if ($rU == $null) {
        sl_send_reply("484", "Address Incomplete");
        exit;
    }

    if (!lookup("location")) {
        sl_send_reply("404", "User Not Found");
        exit;
    }

    route(RELAY);
    exit;
}

route[RELAY] {
    if (!t_relay()) sl_reply_error();
}
