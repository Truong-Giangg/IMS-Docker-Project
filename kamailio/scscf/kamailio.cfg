#!KAMAILIO
####### S-CSCF (Kamailio 6.0.x) – minimal, boots cleanly with IMS mods

#### Core
debug=2
children=8
log_stderror=no
auto_aliases=no

listen=udp:0.0.0.0:6060
listen=tcp:0.0.0.0:6060
alias=scscf.local

mpath="/usr/lib/x86_64-linux-gnu/kamailio/modules/"

#### Load order matters
# core helpers
loadmodule "kex.so"
loadmodule "corex.so"
loadmodule "tm.so"
loadmodule "tmx.so"
loadmodule "sl.so"
loadmodule "rr.so"
loadmodule "pv.so"
loadmodule "maxfwd.so"
loadmodule "xlog.so"
loadmodule "textops.so"
loadmodule "siputils.so"

# RPC (kamcmd) via UNIX binrpc
loadmodule "ctl.so"
loadmodule "cfg_rpc.so"
modparam("ctl", "binrpc", "unix:/var/run/kamailio/kamailio_ctl")

# Dialog + Presence (required by IMS usrloc S-CSCF)
loadmodule "dialog.so"
loadmodule "presence.so"
modparam("presence", "subs_db_mode", 0)   # in-memory, no DB required

# IMS dialog helper (REQUIRES a dlg_flag!)
loadmodule "ims_dialog.so"
modparam("ims_dialog", "dlg_flag", 4)     # choose any free flag index (we use 4)

# Diameter + IMS modules
loadmodule "cdp.so"
loadmodule "cdp_avp.so"
loadmodule "ims_auth.so"
loadmodule "ims_usrloc_scscf.so"
loadmodule "ims_registrar_scscf.so"
loadmodule "ims_isc.so"

# CDP uses the XML config file
modparam("cdp", "config_file", "/etc/kamailio/diameter.xml")

# Basic IMS module params (adjust realm to your setup)
modparam("ims_usrloc_scscf", "realm", "ims.local")
modparam("ims_usrloc_scscf", "db_mode", 0)          # in-memory

modparam("ims_registrar_scscf", "max_expires", 3600)

####### Routing
request_route {
    if (!mf_process_maxfwd_header(10)) {
        sl_send_reply("483", "Too Many Hops"); exit;
    }

    force_rport();
    remove_hf("Route");

    # mark dialog-forming requests so ims_dialog initializes
    if (is_method("INVITE|SUBSCRIBE|UPDATE|MESSAGE")) {
        setflag(4);            # must match ims_dialog:dlg_flag
        record_route();
    }

    # in-dialog? relay
    if (has_totag()) { t_relay(); exit; }

    # health
    if (is_method("OPTIONS")) {
        sl_send_reply("200","OK"); exit;
    }

    # very simple REGISTER stub (no Cx yet) – proves modules are up
    if (is_method("REGISTER")) {
        sl_send_reply("200","OK"); exit;
    }

    sl_send_reply("404","Not Here"); exit;
}

route[RELAY] {
    if (!t_relay()) sl_reply_error();
}
